The ``1-my_list`` module
======================

Using ``print_sorted``
-------------------

Import the ``1-my_list`` module:
    >>> MyList = __import__('1-my_list').MyList

Checking that MyList only executed with no args:
    >>> my_list = MyList(1)
    Traceback (most recent call last):
    TypeError: 'int' object is not iterable

Checking object can be created:
    >>> my_list = MyList()
    >>> my_list
    []

Checking object with None:
    >>> my_list = MyList(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable

Checking object with more than 1 list:
    >>> my_list = MyList([1, 2], [3, 4])
    Traceback (most recent call last):
    TypeError: list expected at most 1 argument, got 2

Checking type of the object:
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>

Checking change an element of the list:
    >>> my_list = MyList()
    >>> my_list.append(10)
    >>> my_list[0] = (2)
    >>> print(my_list)
    [2]

Checking remove an element of the list:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.remove(1)
    >>> print(my_list)
    []

Checking add str to the list:
    >>> my_list = MyList()
    >>> my_list.append("world")
    >>> print(my_list)
    ['world']

Checking add str and int to the list:
    >>> my_list = MyList()
    >>> my_list.append("world")
    >>> my_list.append(10)
    >>> print(my_list)
    ['world', 10]

Checking add str and int to the list:
    >>> my_list = MyList()
    >>> my_list.append("world")
    >>> my_list.append(10)
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'int' and 'str'

Checking list printed correctly:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Checking print_sorted function prints in ascending order:
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

Checking that the original list isn't altered:
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Checking with negative numbers:
    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(-2)
    >>> my_list.append(-3)
    >>> my_list.append(-5)
    >>> print(my_list)
    [-1, -4, -2, -3, -5]

Checking sorted list with negative numbers:
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Checking sorted list with no args:
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Checking with different types of a list:
    >>> my_list = MyList([1, "Betty", "Holberton", 5])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: '<' not supported between instances of 'str' and 'int'
